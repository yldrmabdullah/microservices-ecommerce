spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/auth/**
          filters:
            - name: Retry
              args:
                retries: 2
                methods: GET,POST
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@userKeyResolver}"
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/products/**
          filters:
            - name: Retry
              args:
                retries: 2
                methods: GET
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 20
                redis-rate-limiter.burstCapacity: 40
                key-resolver: "#{@ipKeyResolver}"
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/carts/**,/api/orders/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@userKeyResolver}"
      default-filters:
        - name: CircuitBreaker
          args:
            name: gateway-circuit-breaker
            fallbackUri: forward:/fallback
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
  security:
    user:
      name: admin
      password: admin123
  sleuth:
    zipkin:
      base-url: http://localhost:9411
    sampler:
      probability: 1.0
server:
  port: 8080

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.sleuth: DEBUG

